// Created with my MEGAcyc project: https://github.com/lgblgblgb/megacyc

#define TIMINGS_65GS_FAST	{9,7,3,1,6,4,6,6,3,2,1,1,7,5,7,5,2,7,7,4,6,4,6,6,1,5,1,1,7,5,7,5,5,7,8,8,4,4,6,6,4,2,1,1,5,5,7,5,2,7,7,4,4,4,6,6,1,5,1,1,5,5,7,5,6,7,1,1,6,4,6,6,3,2,1,1,5,5,7,5,2,7,7,4,6,4,6,6,3,5,3,1,3,5,7,5,5,7,5,5,3,4,6,6,4,2,1,1,7,5,7,5,2,7,7,4,3,4,6,6,1,5,4,1,7,5,7,5,4,6,7,5,3,3,3,6,1,2,1,4,4,4,4,5,2,6,6,4,3,3,3,6,1,4,1,4,4,4,4,5,2,7,2,2,4,4,4,6,1,2,1,5,5,5,5,5,2,7,7,4,4,4,4,6,1,5,1,5,5,5,5,5,2,7,2,8,4,4,6,6,1,2,1,9,5,5,7,5,2,7,7,4,4,4,6,6,1,5,3,3,5,5,7,5,2,7,8,8,4,4,6,6,1,2,1,9,5,5,7,5,2,7,7,4,6,4,6,6,1,5,4,4,9,5,7,5}	// MEGA65 fast clock timings


// NOTE: these values above does not contain the costs of the prefix bytes, as those are handled individually
// So those costs can be 1,2 or 3 cycles (NOP prefix, NEG NEG prefix, NEG NEG NOP prefix)


#define MEGA_FOP_NEG_NEG_05_CYCLES 9	// ORQ  $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_06_CYCLES 15	// ASLQ $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_0A_CYCLES 2	// ASLQ Q (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_0D_CYCLES 10	// ORQ  $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_0E_CYCLES 16	// ASLQ $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_12_CYCLES 9	// ORA  [$nn],Z (NOP prefixed)         10 cycs total (+2)
#define MEGA_FOP_NEG_NEG_12_CYCLES 12	// ORQ  ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_12_CYCLES 14	// ORQ  [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_16_CYCLES 15	// ASLQ $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_1A_CYCLES 2	// INQ (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_1E_CYCLES 16	// ASLQ $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NEG_NEG_24_CYCLES 9	// BITQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_25_CYCLES 9	// ANDQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_26_CYCLES 15	// ROLQ $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_2A_CYCLES 2	// ROLQ Q (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_2C_CYCLES 10	// BITQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_2D_CYCLES 10	// ANDQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_2E_CYCLES 16	// ROLQ $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_32_CYCLES 9	// AND  [$nn],Z (NOP prefixed)         10 cycs total (+2)
#define MEGA_FOP_NEG_NEG_32_CYCLES 12	// ANDQ ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_32_CYCLES 14	// ANDQ [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_36_CYCLES 15	// ROLQ $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_3A_CYCLES 2	// DEQ (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_3E_CYCLES 16	// ROLQ $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NEG_NEG_42_CYCLES 1	// NEGQ (NEG NEG prefixed)     3 cycs total (+0)
#define MEGA_FOP_NEG_NEG_43_CYCLES 2	// ASRQ (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_44_CYCLES 15	// ASRQ $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_45_CYCLES 9	// EORQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_46_CYCLES 15	// LSRQ $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_4A_CYCLES 2	// LSRQ Q (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_4D_CYCLES 10	// EORQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_4E_CYCLES 16	// LSRQ $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_52_CYCLES 9	// EOR  [$nn],Z (NOP prefixed)         10 cycs total (+2)
#define MEGA_FOP_NEG_NEG_52_CYCLES 12	// EORQ ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_52_CYCLES 14	// EORQ [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_54_CYCLES 15	// ASRQ $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_56_CYCLES 15	// LSRQ $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_5E_CYCLES 16	// LSRQ $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NEG_NEG_65_CYCLES 9	// ADCQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_66_CYCLES 15	// RORQ $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_6A_CYCLES 2	// RORQ Q (NEG NEG prefixed)     4 cycs total (+1)
#define MEGA_FOP_NEG_NEG_6D_CYCLES 10	// ADCQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_6E_CYCLES 16	// RORQ $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_72_CYCLES 13	// ADC  [$nn],Z (NOP prefixed)         14 cycs total (+6)
#define MEGA_FOP_NEG_NEG_72_CYCLES 12	// ADCQ ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_72_CYCLES 14	// ADCQ [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_76_CYCLES 15	// RORQ $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_7E_CYCLES 16	// RORQ $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NEG_NEG_85_CYCLES 7	// STQ  $nn (NEG NEG prefixed)     9 cycs total (+4)
#define MEGA_FOP_NEG_NEG_8D_CYCLES 8	// STQ  $nnnn (NEG NEG prefixed)     10 cycs total (+4)
#define MEGA_FOP_NOP_92_CYCLES 8	// STA  [$nn],Z (NOP prefixed)         9 cycs total (+2)
#define MEGA_FOP_NEG_NEG_92_CYCLES 10	// STQ  ($nn) (NEG NEG prefixed)     12 cycs total (+4)
#define MEGA_FOP_NEG_NEG_NOP_92_CYCLES 12	// STQ  [$nn] (NEG NEG NOP prefixed) 15 cycs total (+6)
#define MEGA_FOP_NEG_NEG_A5_CYCLES 8	// LDQ  $nn (NEG NEG prefixed)     10 cycs total (+4)
#define MEGA_FOP_NEG_NEG_AD_CYCLES 9	// LDQ  $nnnn (NEG NEG prefixed)     11 cycs total (+4)
#define MEGA_FOP_NOP_B2_CYCLES 12	// LDA  [$nn],Z (NOP prefixed)         13 cycs total (+5)
#define MEGA_FOP_NEG_NEG_B2_CYCLES 11	// LDQ  ($nn),Z (NEG NEG prefixed)     13 cycs total (+4)
#define MEGA_FOP_NEG_NEG_NOP_B2_CYCLES 13	// LDQ  [$nn],Z (NEG NEG NOP prefixed) 16 cycs total (+6)
#define MEGA_FOP_NEG_NEG_C5_CYCLES 9	// CMPQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_C6_CYCLES 15	// DEQ  $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_CD_CYCLES 10	// CMPQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_CE_CYCLES 16	// DEQ  $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_D2_CYCLES 9	// CMP  [$nn],Z (NOP prefixed)         10 cycs total (+2)
#define MEGA_FOP_NEG_NEG_D2_CYCLES 12	// CMPQ ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_D2_CYCLES 14	// CMPQ [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_D6_CYCLES 15	// DEQ  $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_DE_CYCLES 16	// DEQ  $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NEG_NEG_E5_CYCLES 9	// SBCQ $nn (NEG NEG prefixed)     11 cycs total (+5)
#define MEGA_FOP_NEG_NEG_E6_CYCLES 15	// INQ  $nn (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_ED_CYCLES 10	// SBCQ $nnnn (NEG NEG prefixed)     12 cycs total (+5)
#define MEGA_FOP_NEG_NEG_EE_CYCLES 16	// INQ  $nnnn (NEG NEG prefixed)     18 cycs total (+9)
#define MEGA_FOP_NOP_F2_CYCLES 9	// SBC  [$nn],Z (NOP prefixed)         10 cycs total (+2)
#define MEGA_FOP_NEG_NEG_F2_CYCLES 12	// SBCQ ($nn) (NEG NEG prefixed)     14 cycs total (+5)
#define MEGA_FOP_NEG_NEG_NOP_F2_CYCLES 14	// SBCQ [$nn] (NEG NEG NOP prefixed) 17 cycs total (+7)
#define MEGA_FOP_NEG_NEG_F6_CYCLES 15	// INQ  $nn,X (NEG NEG prefixed)     17 cycs total (+9)
#define MEGA_FOP_NEG_NEG_FE_CYCLES 16	// INQ  $nnnn,X (NEG NEG prefixed)     18 cycs total (+9)
